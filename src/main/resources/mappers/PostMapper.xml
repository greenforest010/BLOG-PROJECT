<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.growingitskill.mapper.PostMapper">
	<resultMap type="postVO" id="resultPost">
		<id property="id" column="id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="content" column="content" />
		<result property="published" column="published" />
		<result property="slugTitle" column="slug_title" />

		<association property="categoryVO" javaType="CategoryVO">
			<id property="id" column="categoryId" />
			<result property="term" column="term" />
			<result property="slugTerm" column="slug_term" />
		</association>

		<association property="memberVO" javaType="MemberVO">
			<result property="loginId" column="login_id" />
		</association>
	</resultMap>

	<select id="listAll" resultMap="resultPost">
		SELECT p.id, title, author, term,
		published, login_id, c.id as categoryId FROM post p LEFT JOIN
		category_relation cr ON p.id = cr.post_id LEFT JOIN category c ON
		cr.category_id = c.id LEFT JOIN member m ON p.author = m.id ORDER BY
		p.id DESC
	</select>

	<select id="readById" resultMap="resultPost">
		SELECT p.id, title, author,
		content,
		term, published, login_id, slug_title, c.id as categoryId FROM
		post p
		LEFT JOIN
		category_relation cr ON p.id = cr.post_id LEFT JOIN
		category
		c ON cr.category_id = c.id LEFT JOIN
		member m ON p.author =
		m.id WHERE
		p.id = #{id}
	</select>

	<select id="readList" resultMap="resultPost">
		SELECT p.id, title, author,
		content, term, published, login_id, slug_title,
		c.id as categoryId FROM
		post p
		LEFT JOIN category_relation cr ON p.id = cr.post_id
		LEFT JOIN
		category c ON cr.category_id = c.id
		LEFT JOIN member m ON p.author =
		m.id
		WHERE p.id > 0 AND (title LIKE CONCAT('%', #{keyword}, '%') OR
		content LIKE
		CONCAT('%', #{keyword}, '%'))
		ORDER BY p.id DESC
		LIMIT
		#{pageStart}, #{perPageNum}
	</select>

	<!-- 2가지 이상의 파라미터로 매핑시 매핑 이름을 구체적으로 기입 -->
	<select id="readListByCategory" resultMap="resultPost">
		SELECT p.id, title,
		author, content, term, published, login_id,
		slug_title,
		c.id as
		categoryId, slug_term FROM post p
		LEFT JOIN
		category_relation cr ON
		p.id = cr.post_id
		LEFT JOIN category c ON
		cr.category_id = c.id
		LEFT
		JOIN member m ON p.author = m.id
		WHERE p.id >
		0 AND c.id IN
		<foreach collection="categoryLevelSet" item="item" index="index"
			open="(" separator="," close=")">#{item}</foreach>
		AND (title LIKE CONCAT('%', #{criteria.keyword}, '%') OR
		content
		LIKE
		CONCAT('%', #{criteria.keyword}, '%'))
		ORDER BY p.id DESC
		LIMIT
		#{criteria.pageStart}, #{criteria.perPageNum}
	</select>

	<!-- 2가지 이상의 파라미터로 매핑시 매핑 이름을 구체적으로 기입 -->
	<select id="countPagingByCategory" resultType="int">
		SELECT COUNT(p.id)
		FROM post p
		LEFT JOIN category_relation cr ON
		p.id = cr.post_id
		LEFT JOIN
		category c ON cr.category_id = c.id
		LEFT
		JOIN member m ON p.author =
		m.id
		WHERE p.id > 0 AND slug_term LIKE
		#{slugTerm} AND (title LIKE
		CONCAT('%', #{criteria.keyword}, '%') OR
		content
		LIKE
		CONCAT('%',
		#{criteria.keyword}, '%'))
	</select>

</mapper>